{"remainingRequest":"/Users/roozbeh/Desktop/re/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/roozbeh/Desktop/re/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/roozbeh/Desktop/re/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/roozbeh/Desktop/re/src/components/Skills.vue?vue&type=template&id=4cdb3572&","dependencies":[{"path":"/Users/roozbeh/Desktop/re/src/components/Skills.vue","mtime":1602273708212},{"path":"/Users/roozbeh/Desktop/re/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/roozbeh/Desktop/re/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/roozbeh/Desktop/re/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/roozbeh/Desktop/re/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}